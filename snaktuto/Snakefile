########################
# Load config file
########################
configfile: "configs/configuser.yaml"

#Define samples can be extracted by func
SAMPLES=["A","B","C"]
#path to qc in the project
QCPATH= config["workdir"]+"/"+config["projectname"]+"/qc/fastqc"


##########################
# Rules definition
##########################
rule prj_tree:
	priority: 10
	params:
		projectname=config["projectname"],
		workdir=config["workdir"]

	message: "Step1: Create project tree."
	log: "logs/prjtree.log"
	shell:
		r"""
		python  scripts/prjtree.py {params.projectname} {params.workdir} 
		sleep 5
		"""

rule mini_report:
	priority: 11
	params:
		username=config["username"],
		projectname=config["projectname"],
		workdir=config["workdir"],
		datadir=config["datadir"]
	message: "Step2: Create the mini report."
	log: "logs/minireport.log"
	shell:
		r"""python  scripts/minireport.py {params.username} {params.projectname} {params.workdir} {params.datadir}
		sleep 5
		"""
 
rule fastqc:
	priority: 7

	message: "Step3: Launch FASTQC."

	params:
		qcfolder=config["workdir"]+"/"+config["projectname"]+"/"+"qc/fastqc"
	input:
        	fastq=expand(config["datadir"]+"/{sample}.fastq", sample=SAMPLES)
	output:
        	#html=expand(QCPATH+"/{sample}.html",sample=SAMPLES),
        	zip=expand(QCPATH+"/{sample}_fastqc.zip",sample=SAMPLES)
	
	log: expand("logs/fastqc/{sample}.log",sample=SAMPLES)
    	threads: 2
	
	conda: 
		"envs/fastqc.yaml"
	#wrapper:
	#	"master/bio/fastqc"
	
	shell:
		r""" 
		fastqc --version
		mkdir -p {params.qcfolder}
		fastqc -t {threads} {input.fastq} -o {params.qcfolder}
		sleep 15
		"""

rule clean_all:
	priority: 2
	params:
		projectname=config["projectname"],
		workdir=config["workdir"]
	message: "Step4: Move logs to Project Logs"
	shell:
		r"""
		sleep 5
		mv logs {params.workdir}/{params.projectname}/Logs/
		"""
